trigger:
  - master

pr:
  - master

jobs:
  - job: "Test"
    pool:
      vmImage: "Ubuntu-16.04"
    strategy:
      matrix:
        Python36_TF113:
          python.version: "3.6"
          tensorflow.version: "1.13.1"
        Python37_TF114:
          python.version: "3.7"
          tensorflow.version: "1.14.0"
          pytest.args: "--cov=larq --cov-report=html --cov-config=.coveragerc"
        Python37_TF2:
          python.version: "3.7"
          tensorflow.version: "2.0.0-beta1"

    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "$(python.version)"
          architecture: "x64"

      - script: |
          pip install tensorflow==$(tensorflow.version)
          pip install -e .[test]
          pip install pytest-azurepipelines
        displayName: "Install dependencies"

      - script: pytest . $(pytest.args)
        displayName: "pytest"

  - job: "Lint"
    pool:
      vmImage: "Ubuntu-16.04"
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "3.7"
          architecture: "x64"

      - script: pip install pyflakes==2.1.1 black==19.3b0
        displayName: "Install linting dependencies"

      - script: pyflakes .
        displayName: "pyflakes"

      - script: black . --check --target-version py36 --exclude 'build/|buck-out/|dzzist/|_build/|\.git/|\.hg/|\.mypy_cache/|\.tox/|\.venv/|larq/snapshots/'
        displayName: "Black code style"
